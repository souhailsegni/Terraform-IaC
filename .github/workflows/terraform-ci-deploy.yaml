name: Deploy Terraform

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.10.4  # Specify the Terraform version

    - name: Terraform Init
      run: terraform init -input=false -backend-config="bucket=s3-bucket-terraform-1" -backend-config="key=env:${{ env.TF_ENV }}/Terraform/terraform.tfstate" -backend-config="region=eu-west-1"      
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        TF_ENV: dev # Replace 'dev' with 'prod' or parameterize as needed
    - name: Terraform Plan
      id: tfplan
      run: terraform plan -out=tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Save Plan Output
      run: terraform show -json tfplan > plan.json

    - name: Check for Changes
      run: |
        if jq -e '.resource_changes | length == 0' plan.json; then
          echo "No changes detected, exiting."
          exit 0
        fi

    - name: Terraform Apply
      if: steps.tfplan.outcome == 'success'
      run: terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Notify Success
      if: always()
      uses: actions/github-script@v4
      with:
        script: |
          const core = require('@actions/core');
          const github = require('@actions/github');
          const context = github.context;

          core.notice(`Terraform apply succeeded for commit ${context.sha} in ${context.ref}`);
